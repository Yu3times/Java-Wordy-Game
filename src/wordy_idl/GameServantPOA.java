package wordy_idl;


/**
* wordy_idl/GameServantPOA.java .
* Generated by the IDL-to-Java compiler (portable), version "3.2"
* from Wordy.idl
* Wednesday, May 10, 2023 8:44:05 AM SGT
*/


// Interface for a Game object when a player joins a game
public abstract class GameServantPOA extends org.omg.PortableServer.Servant
 implements GameServantOperations, org.omg.CORBA.portable.InvokeHandler
{

  // Constructors

  private static java.util.Hashtable _methods = new java.util.Hashtable ();
  static
  {
    _methods.put ("gameCanStart", new Integer (0));
    _methods.put ("gameIsFinished", new Integer (1));
    _methods.put ("submitWord", new Integer (2));
    _methods.put ("checkPlayerCount", new Integer (3));
    _methods.put ("getRemainingPendingTime", new Integer (4));
    _methods.put ("getRemainingReadyTime", new Integer (5));
    _methods.put ("getRemainingRoundTime", new Integer (6));
    _methods.put ("getRemainingResultsTime", new Integer (7));
    _methods.put ("getLetters", new Integer (8));
  }

  public org.omg.CORBA.portable.OutputStream _invoke (String $method,
                                org.omg.CORBA.portable.InputStream in,
                                org.omg.CORBA.portable.ResponseHandler $rh)
  {
    org.omg.CORBA.portable.OutputStream out = null;
    Integer __method = (Integer)_methods.get ($method);
    if (__method == null)
      throw new org.omg.CORBA.BAD_OPERATION (0, org.omg.CORBA.CompletionStatus.COMPLETED_MAYBE);

    switch (__method.intValue ())
    {
       case 0:  // wordy_idl/GameServant/gameCanStart
       {
         try {
           boolean $result = false;
           $result = this.gameCanStart ();
           out = $rh.createReply();
           out.write_boolean ($result);
         } catch (NoPlayersJoinedException $ex) {
           out = $rh.createExceptionReply ();
           NoPlayersJoinedExceptionHelper.write (out, $ex);
         } catch (PendingGameException $ex) {
           out = $rh.createExceptionReply ();
           PendingGameExceptionHelper.write (out, $ex);
         }
         break;
       }

       case 1:  // wordy_idl/GameServant/gameIsFinished
       {
         boolean $result = false;
         $result = this.gameIsFinished ();
         out = $rh.createReply();
         out.write_boolean ($result);
         break;
       }

       case 2:  // wordy_idl/GameServant/submitWord
       {
         try {
           int userId = in.read_long ();
           String word = in.read_string ();
           this.submitWord (userId, word);
           out = $rh.createReply();
         } catch (InvalidWordException $ex) {
           out = $rh.createExceptionReply ();
           InvalidWordExceptionHelper.write (out, $ex);
         } catch (WordLengthException $ex) {
           out = $rh.createExceptionReply ();
           WordLengthExceptionHelper.write (out, $ex);
         } catch (WrongLetterException $ex) {
           out = $rh.createExceptionReply ();
           WrongLetterExceptionHelper.write (out, $ex);
         }
         break;
       }

       case 3:  // wordy_idl/GameServant/checkPlayerCount
       {
         int $result = (int)0;
         $result = this.checkPlayerCount ();
         out = $rh.createReply();
         out.write_long ($result);
         break;
       }

       case 4:  // wordy_idl/GameServant/getRemainingPendingTime
       {
         long $result = (long)0;
         $result = this.getRemainingPendingTime ();
         out = $rh.createReply();
         out.write_longlong ($result);
         break;
       }

       case 5:  // wordy_idl/GameServant/getRemainingReadyTime
       {
         long $result = (long)0;
         $result = this.getRemainingReadyTime ();
         out = $rh.createReply();
         out.write_longlong ($result);
         break;
       }

       case 6:  // wordy_idl/GameServant/getRemainingRoundTime
       {
         long $result = (long)0;
         $result = this.getRemainingRoundTime ();
         out = $rh.createReply();
         out.write_longlong ($result);
         break;
       }

       case 7:  // wordy_idl/GameServant/getRemainingResultsTime
       {
         long $result = (long)0;
         $result = this.getRemainingResultsTime ();
         out = $rh.createReply();
         out.write_longlong ($result);
         break;
       }

       case 8:  // wordy_idl/GameServant/getLetters
       {
         char $result[] = null;
         $result = this.getLetters ();
         out = $rh.createReply();
         randomLettersHelper.write (out, $result);
         break;
       }

       default:
         throw new org.omg.CORBA.BAD_OPERATION (0, org.omg.CORBA.CompletionStatus.COMPLETED_MAYBE);
    }

    return out;
  } // _invoke

  // Type-specific CORBA::Object operations
  private static String[] __ids = {
    "IDL:wordy_idl/GameServant:1.0"};

  public String[] _all_interfaces (org.omg.PortableServer.POA poa, byte[] objectId)
  {
    return (String[])__ids.clone ();
  }

  public GameServant _this() 
  {
    return GameServantHelper.narrow(
    super._this_object());
  }

  public GameServant _this(org.omg.CORBA.ORB orb) 
  {
    return GameServantHelper.narrow(
    super._this_object(orb));
  }


} // class GameServantPOA
